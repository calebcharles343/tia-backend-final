{
  "swagger": "2.0",
  "info": {
    "title": "Tunga Shopping List API by Charles Caleb",
    "description": "Comprehensive API documentation for the Shopping List application",
    "version": "1.0.0"
  },
  "host": "shopping-list-f1b6.onrender.com",
  "basePath": "/api/v1/shopping-list/",
  "schemes": ["https"],
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your bearer token in the format **Bearer &lt;token&gt;**"
    }
  },
  "security": [{ "Bearer": [] }],
  "paths": {
    "/users/signup": {
      "post": {
        "tags": ["User Auth"],
        "description": "Register a new user account. Provide the necessary details to create a new user profile.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration details including name, email, and password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "password": { "type": "string" },
                "confirm_password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "201": { "description": "User successfully registered." },
          "400": { "description": "Invalid input data." },
          "409": { "description": "User or email already exists." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["User Auth"],
        "description": "Authenticate a user and return a JWT token. The token should be included in the Authorization header for subsequent requests.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User login credentials including email and password.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "password": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Login successful." },
          "400": { "description": "Invalid login credentials." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["User Auth"],
        "description": "Log out user. User has to be logged in to log out.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "User logged out successfully." },
          "404": { "description": "User has to be logged in to log out." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["User Management"],
        "description": "Retrieve a list of all users. This operation is restricted to admin users.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Users retrieved successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User Management"],
        "description": "Retrieve a user by ID. This operation is restricted to admin user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to Retrieve."
          }
        ],
        "responses": {
          "200": { "description": "User retrieved successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/forgotPassword": {
      "post": {
        "tags": ["User Auth"],
        "description": "Initiate a password reset request. An email with a reset token will be sent to the registered email address.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Email address of the user requesting a password reset.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset email sent successfully." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/resetPassword/{token}": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Reset the user's password using the provided reset token.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Password reset token sent via email."
          },
          {
            "name": "body",
            "in": "body",
            "description": "New password details.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "password": { "type": "string" },
                "passwordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password reset successfully." },
          "404": { "description": "Invalid or expired reset token." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/updatePassword": {
      "patch": {
        "tags": ["User Auth"],
        "description": "Update the user's password. The user must be authenticated.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Current and new password details.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "passwordCurrent": { "type": "string" },
                "password": { "type": "string" },
                "passwordConfirm": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Password updated successfully." },
          "400": { "description": "Invalid input data." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/users/deleteMe/{id}": {
      "delete": {
        "tags": ["User Management"],
        "description": "Delete a user account. This operation is restricted to admin users.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the user to delete."
          }
        ],
        "responses": {
          "200": { "description": "User deleted successfully." },
          "400": { "description": "Invalid user ID." },
          "401": { "description": "Unauthorized access." },
          "404": { "description": "User not found." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/items/addShopItem": {
      "post": {
        "tags": ["Shop Items"],
        "description": "Add items to store. Login is required and Restricted to admin user.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Shop items credentials includes item_name and price.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item_name": { "type": "string" },
                "price": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Item added successfully." },
          "400": {
            "description": "You do not have permission to perform this action"
          },
          "404": { "description": "Login Required." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/items": {
      "get": {
        "tags": ["Shop Items"],
        "description": "Retrieve a list of all shop items. Login is required.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": { "description": "Items retrieved successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": ["Shop Items"],
        "description": "Retrieve a shop item by ID. Login is required.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the item to Retrieve."
          }
        ],
        "responses": {
          "200": { "description": "Item retrieved successfully." },
          "401": { "description": "Unauthorized access." },
          "500": { "description": "Internal server error." }
        }
      }
    },

    "/items/updateShopItem/{id}": {
      "patch": {
        "tags": ["Shop Items"],
        "description": "Update a shop item by ID. Login is required and Restricted to admin user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the item to update."
          },
          {
            "name": "body",
            "in": "body",
            "description": "New item details.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "item_name": { "type": "string" },
                "price": { "type": "string" }
              }
            }
          }
        ],
        "responses": {
          "200": { "description": "Item updated successfully." },
          "404": {
            "description": "No Item with the proveided ID available in shop."
          },
          "500": { "description": "Internal server error." }
        }
      }
    },
    "/items/deleteShopItem/{id}": {
      "delete": {
        "tags": ["Shop Items"],
        "description": "Delete a shop item. Login is required and Restricted to admin user.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the item to delete."
          }
        ],
        "responses": {
          "200": { "description": "item deleted successfully." },
          "400": { "description": "Invalid item ID." },
          "401": { "description": "Unauthorized access." },
          "404": { "description": "item not found." },
          "500": { "description": "Internal server error." }
        }
      }
    }
  }
}
